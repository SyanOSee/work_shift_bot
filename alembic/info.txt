Для управления изменениями схемы базы данных в проектах, использующих SQLAlchemy, часто применяют инструмент миграции, такой как Alembic. Alembic позволяет генерировать скрипты миграции, которые могут быть применены к базе данных для внесения изменений в схему без потери данных.
Вот как можно использовать Alembic для применения изменений в схему базы данных:
Установите Alembic, если он еще не установлен:

pip install alembic

Инициализируйте Alembic в вашем проекте:

alembic init alembic

Это создаст каталог alembic с несколькими файлами конфигурации внутри.
Настройте файл alembic.ini и env.py внутри каталога alembic. Убедитесь, что строка подключения к базе данных (sqlalchemy.url) в alembic.ini указывает на вашу текущую базу данных. В env.py необходимо импортировать модели SQLAlchemy, чтобы Alembic мог обнаружить изменения в схеме.

Сгенерируйте скрипт миграции, который будет содержать изменения схемы:
alembic revision --autogenerate -m "Description of changes"

Вместо "Description of changes" введите описание ваших изменений. Эта команда создаст новый скрипт миграции в папке alembic/versions.
Проверьте сгенерированный скрипт миграции на предмет ошибок или недостающих изменений. Иногда Alembic может не уловить все изменения, и вам может потребоваться ручное редактирование скрипта миграции.
Примените миграцию к базе данных:

alembic upgrade head

Команда upgrade head применит все миграции, которые еще не были применены, до последней (head).
Важно помнить, что перед применением миграций на продуктивной базе данных всегда следует делать резервную копию. Также рекомендуется сначала протестировать миграции на копии базы данных, чтобы убедиться, что они не приведут к потере данных или другим нежелательным последствиям.
Alembic предлагает гибкий и мощный инструментарий для управления миграциями и может значительно облегчить процесс обновления схемы базы данных без потери данных.